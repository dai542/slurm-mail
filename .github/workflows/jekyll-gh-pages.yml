# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy GitHub PagesS

on:  
  workflow_run:
    workflows: ["Test and release"]
    types:
      - completed
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    # only run the job if the workflow executed OK and if we are creating a new release or running on the main branch
    if: ${{ github.event.workflow_run.conclusion == 'success' }} && (contains(github.event.ref, '/tags/') or contains(github.event.ref, 'main'))
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare MD files
        run: |
          cp README.md pages/index.md
          cp CHANGELOG.md TEMPLATES.md pages/
          mkdir -p pages/repo pages/tests/unit pages/tests/integration pages/tests/integration/docker-slurm
          cp tests/unit/README.md pages/tests/unit/index.md
          cp tests/integration/README.md pages/tests/integration/index.md
          cp tests/integration/docker-slurm/README.md pages/tests/integration/docker-slurm/index.md
          sed -i 's#../../#https://github.com/neilmunday/slurm-mail/blob/main/#g' pages/tests/integration/index.md
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install required packages
        run: |
          sudo apt update
          sudo apt install -y createrepo-c dpkg-dev
          python -m pip install --upgrade pip
          pip install yq
      - name: Create repos
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          build-tools/create-repos.sh -o $(realpath pages/repo) -u $(yq -r .url pages/_config.yml)
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./pages
          destination: ./_site
      - name: Set permissions on the _site directory
        run: sudo chown -R runner:docker _site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
