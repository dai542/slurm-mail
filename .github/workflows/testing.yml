name: testing

on:
  pull_request:
    paths:
      - '.github/workflows/testing.yml'
      - 'setup.py'
      - 'src/slurmmail/*.py'
      - 'tests/integration/*.py'
      - 'tests/integration/run.sh'
      - 'tests/integration/tests.yml'
      - 'tests/unit/*.py'
  push:
    paths:
      - '.github/workflows/testing.yml'
      - 'setup.py'
      - 'src/slurmmail/*.py'
      - 'tests/integration/*.py'
      - 'tests/integration/run.sh'
      - 'tests/integration/tests.yml'
      - 'tests/unit/*.py'
  workflow_dispatch:

jobs:
  unit_tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mock
          pip install pytest
          pip install pytest-cov
          pip install typing-extensions

      - name: Run unit tests
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python_version }}"
        run: |
          pytest -v

      - name: Store coverage file
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage.${{ matrix.python_version }}

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: 'coverage'

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

  build_rhel7:
    needs: unit_tests
    permissions:
      contents: read
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Create RHEL 7 RPM
        run: build-tools/RedHat_7/build.sh
      - name: Get package name
        id: pkg_path
        run: |
          echo "RHEL7_RPM=$(
            ls -1 build-tools/RedHat_7/slurm-mail*.rpm
          )" >> $GITHUB_ENV
      - name: Store RHEL 7 RPM
        uses: actions/upload-artifact@v3
        with:
          name: rhel7_pkg
          path: ${{env.RHEL7_RPM}}

  build_rhel8:
    needs: unit_tests
    permissions:
      contents: read
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Create RHEL 8 RPM
        run: build-tools/RedHat_8/build.sh
      - name: Get package name
        id: pkg_path
        run: |
          echo "RHEL8_RPM=$(
            ls -1 build-tools/RedHat_8/slurm-mail*.rpm
          )" >> $GITHUB_ENV
      - name: Store RHEL 8 RPM
        uses: actions/upload-artifact@v3
        with:
          name: rhel8_pkg
          path: ${{env.RHEL8_RPM}}

  build_rhel9:
    needs: unit_tests
    permissions:
      contents: read
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Create RHEL 9 RPM
        run: build-tools/RedHat_9/build.sh
      - name: Get package name
        id: pkg_path
        run: |
          echo "RHEL9_RPM=$(
            ls -1 build-tools/RedHat_9/slurm-mail*.rpm
          )" >> $GITHUB_ENV
      - name: Store RHEL 9 RPM
        uses: actions/upload-artifact@v3
        with:
          name: rhel9_pkg
          path: ${{env.RHEL9_RPM}}

  build_suse15:
    needs: unit_tests
    permissions:
      contents: read
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Create SUSE 15 RPM
        run: build-tools/OpenSUSE_15/build.sh
      - name: Get package name
        id: pkg_path
        run: |
          echo "SUSE15_RPM=$(
            ls -1 build-tools/OpenSUSE_15/slurm-mail*.rpm
          )" >> $GITHUB_ENV
      - name: Store SUSE 15 RPM
        uses: actions/upload-artifact@v3
        with:
          name: suse15_pkg
          path: ${{env.SUSE15_RPM}}

  integration_tests_rhel7:
    needs: build_rhel7
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        slurm-version: ["21.08.8-2", "22.05.8"]
    steps:
      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: 'rhel7_pkg'
          path: tests/integration/
      - name: Run integration tests
        run: |
          tests/integration/run.sh -s "${{ matrix.slurm-version }}" -o el7 -r

  integration_tests_rhel8:
    needs: build_rhel8
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        slurm-version: ["21.08.8-2", "22.05.8"]
    steps:
      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: 'rhel8_pkg'
          path: tests/integration/
      - name: Run integration tests
        run: |
          tests/integration/run.sh -s "${{ matrix.slurm-version }}" -o el8 -r

  integration_tests_rhel9:
    needs: build_rhel9
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        slurm-version: ["22.05.8"]
    steps:
      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: 'rhel9_pkg'
          path: tests/integration/
      - name: Run integration tests
        run: |
          tests/integration/run.sh -s "${{ matrix.slurm-version }}" -o el9 -r

  integration_tests_suse15:
    needs: build_suse15
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        slurm-version: ["21.08.8-2", "22.05.8"]
    steps:
      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: 'suse15_pkg'
          path: tests/integration/
      - name: Run integration tests
        run: |
          tests/integration/run.sh -s "${{ matrix.slurm-version }}" -o sl15 -r
